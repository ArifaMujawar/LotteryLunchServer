{"version":3,"sources":["components/Login.js","components/header.js","components/Functionality.js","components/Display.js","Main.js","App.js","index.js"],"names":["Login","props","useState","userName","setUserName","password","setPassword","usersJson","description","users","testUser","type","onFormSubmit","e","preventDefault","Object","keys","filter","length","window","localStorage","setItem","JSON","stringify","console","log","value","auth","setAuth","handleAuth","alert","className","size","onSubmit","label","icon","group","validate","error","success","getValue","onClick","Header","Functionality","generateLottery","sendEmails","color","Display","emails","map","i","email","Main","setEmails","a","axios","get","response","data","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"qRAwFeA,G,wBAhFD,SAACC,GAAW,IAAD,EACSC,mBAAS,IADlB,mBAChBC,EADgB,KACNC,EADM,OAESF,mBAAS,IAFlB,mBAEhBG,EAFgB,KAENC,EAFM,KAGjBC,EAAY,CAChBC,YAAa,+BACbC,MAAO,CACLC,SAAU,CACRL,SAAU,OACVM,KAAM,UAUNC,EAAe,SAACC,GACpBA,EAAEC,iBAEqBC,OAAOC,KAAKT,EAAUE,OAAOQ,QAAO,SAACJ,GAE1D,OAAOA,IAAMV,KAGEe,OAAS,GACxBX,EAAUE,MAAMN,GAAUE,WAAaA,GAGvCc,OAAOC,aAAaC,QAClB,OACAC,KAAKC,UAAUhB,EAAUE,MAAMN,KAEjCqB,QAAQC,IAAI,aAtBG,WACjB,IAAMC,EAAQzB,EAAM0B,KACpB1B,EAAM2B,SAASF,GACfF,QAAQC,IAAI,SAAUC,GAoBpBG,IAGAC,MAAM,4BAIV,OACE,yBAAKC,UAAU,SACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,KAAK,KACX,0BAAMC,SAAUrB,GACd,uBAAGmB,UAAU,uBAAb,WACA,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEG,MAAM,kBACNC,KAAK,WACLC,OAAK,EACLzB,KAAK,OACL0B,UAAQ,EACRC,MAAM,QACNC,QAAQ,QACRC,SAAU,SAACd,GAAD,OAAWtB,EAAYsB,MAEnC,kBAAC,IAAD,CACEQ,MAAM,qBACNC,KAAK,OACLC,OAAK,EACLzB,KAAK,WACL0B,UAAQ,EACRG,SAAU,SAACd,GAAD,OAAWpB,EAAYoB,OAGrC,yBAAKK,UAAU,eACb,kBAAC,IAAD,CAAQpB,KAAK,SAAS8B,QAAS7B,GAA/B,gB,yBCnEC8B,EARA,WACb,OACE,6BACE,+CCSSC,EAXO,SAAC1C,GACrB,OACE,yBAAK8B,UAAU,iBACb,kBAAC,IAAD,CAAQU,QAAS,kBAAMxC,EAAM2C,oBAA7B,oBACA,kBAAC,IAAD,CAAQH,QAAS,kBAAMxC,EAAM4C,cAAcC,MAAM,WAAjD,iBCGSC,EARC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACd,OACI,6BACI,oDACFA,EAAOC,KAAI,SAACC,GAAD,OAAK,uBAAGnB,UAAU,UAAUmB,EAAEC,Y,iBC4BpCC,EA1BF,WAAO,IAAD,EACWlD,mBAAS,IADpB,mBACV8C,EADU,KACFK,EADE,KAGXT,EAAe,uCAAG,4BAAAU,EAAA,6DACtB9B,QAAQC,IAAI,kBADU,SAEC8B,IAAMC,IAPjB,uBAKU,OAEhBC,EAFgB,OAGtBjC,QAAQC,IAAI,eAAgBgC,GAC5BJ,EAAUI,EAASC,MAJG,2CAAH,qDAWrB,OACE,yBAAK3B,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEa,gBAAiBA,EACjBC,WATa,WACjBrB,QAAQC,IAAI,gCAUTuB,EAAO9B,OAAS,GAAK,kBAAC,EAAD,CAAS8B,OAAQA,MCP9BW,EAbH,WAAO,IAAD,EACQzD,oBAAS,GADjB,mBACTyB,EADS,KACHC,EADG,KAMhB,OAJAgC,qBAAU,WACRpC,QAAQC,IAAI,OAAQE,KACnB,CAACA,IAGF,yBAAKI,UAAU,OACXJ,EAAiD,kBAAC,EAAD,MAA1C,kBAAC,EAAD,CAAOA,KAAMA,EAAMC,QAASA,MCL3CiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.912d8dd7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { MDBInput, MDBBtn, MDBCol } from \"mdbreact\";\nimport { BrowserRouter as Router, withRouter } from \"react-router-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"../App.css\";\n\nconst Login = (props) => {\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const usersJson = {\n    description: \"Login and passwords of users\",\n    users: {\n      testUser: {\n        password: \"test\",\n        type: \"test\",\n      },\n    },\n  };\n  const handleAuth = () => {\n    const value = props.auth;\n    props.setAuth(!value);\n    console.log(\"value \", value);\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    //const { usersJson, userName, password } = this.state;\n    const filterUserName = Object.keys(usersJson.users).filter((e) => {\n      // console.log('e value', e);\n      return e === userName;\n    });\n    if (\n      filterUserName.length > 0 &&\n      usersJson.users[userName].password === password\n    ) {\n      //props.history.push(\"test\");\n      window.localStorage.setItem(\n        \"user\",\n        JSON.stringify(usersJson.users[userName])\n      );\n      console.log(\"Logged in\");\n      handleAuth();\n      \n    } else {\n      alert(\"Wrong login or password\");\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <Router>\n        <MDBCol size=\"3\">\n          <form onSubmit={onFormSubmit}>\n            <p className=\"h5 text-center mb-4\">Sign in</p>\n            <div className=\"grey-text\">\n              <MDBInput\n                label=\"Type your email\"\n                icon=\"envelope\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n                getValue={(value) => setUserName(value)}\n              />\n              <MDBInput\n                label=\"Type your password\"\n                icon=\"lock\"\n                group\n                type=\"password\"\n                validate\n                getValue={(value) => setPassword(value)}\n              />\n            </div>\n            <div className=\"text-center\">\n              <MDBBtn type=\"submit\" onClick={onFormSubmit}>\n                Login\n              </MDBBtn>\n            </div>\n          </form>\n        </MDBCol>\n      </Router>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <div>\n      <h1>Lottery Lunch</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { MDBBtn } from \"mdbreact\";\n\nconst Functionality = (props) => {\n  return (\n    <div className=\"Functionality\">\n      <MDBBtn onClick={() => props.generateLottery()}>Generate lottery</MDBBtn>\n      <MDBBtn onClick={() => props.sendEmails()} color=\"warning\">\n        Send Emails\n      </MDBBtn>\n    </div>\n  );\n};\n\nexport default Functionality;\n","import React from 'react';\n\nconst Display = ({emails}) => {\n    return (\n        <div> \n            <h3>Generated emails are</h3>\n         {emails.map((i)=><p className='emails'>{i.email}</p>)}\n        </div>\n    )\n}\nexport default Display;","import React, { useState } from \"react\";\nimport Header from \"./components/header\";\nimport Functionality from \"./components/Functionality\";\nimport Display from \"./components/Display\";\nimport axios from \"axios\";\n\nconst baseUrl = \"/api/generateEmails\";\n\nconst Main = () => {\n  const [emails, setEmails] = useState([]);\n\n  const generateLottery = async () => {\n    console.log(\"button clicked\");\n    const response = await axios.get(baseUrl);\n    console.log(\"response is \", response);\n    setEmails(response.data);\n  };\n\n  const sendEmails = () => {\n    console.log(\"sendEmails button clicked\");\n  };\n\n  return (\n    <div className=\"Main-page\">\n      <Header />\n      <Functionality\n        generateLottery={generateLottery}\n        sendEmails={sendEmails}\n      />\n      {emails.length > 0 && <Display emails={emails} />}\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login\";\nimport Main from \"./Main.js\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [auth, setAuth] = useState(false);\n  useEffect(() => {\n    console.log(\"auth\", auth);\n  }, [auth]);\n\n  return (\n    <div className=\"App\">\n      {!auth ? <Login auth={auth} setAuth={setAuth} /> : <Main />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\n//import { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n// import { Router } from \"react-router\";\n// import { createBrowserHistory } from \"history\";\n\n// const history = createBrowserHistory();\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}